{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { apiInstance } from \"../../API/axios\";\nimport endPoints from \"../../API/endPoints\";\nimport 'react-toastify/dist/ReactToastify.css';\nconst initialState = {\n  email: \"\",\n  password: \"\",\n  privacyPolicy: false\n}; // export const getSignInFormAction = createAsyncThunk(\n//     'signinFormActionType',\n//     async (data: SignInTypes) => {\n//         console.log(\"fsdfsdf\")\n//         const signInFormResponse = await apiInstance.post(endPoints.API_USER_SIGN_IN_FORM, data)\n//             .then((res) => {\n//                 if (res.data.data.token) {\n//                     localStorage.setItem(\"loginData\", res.data.data.token);\n//                 }\n//                 return res.data.data\n//             })\n//         console.log(\"signInFromResponse==>\", signInFormResponse)\n//         return signInFormResponse;\n//     }\n// )\n\nexport const getSignInFormAction = createAsyncThunk('signin', async data => {\n  const response = await apiInstance.post(endPoints.API_USER_SIGN_IN_FORM, data).then(res => {\n    return res.data;\n  });\n}); // export const signInSlice = createSlice({\n//     name: 'signInInfo',\n//     initialState,\n//     reducers: {},\n//     extraReducers: (builder) => {\n//         builder.addCase(getSignInFormAction.fulfilled, (state, action) => {\n//             console.log(\"signIn==>\", action.payload)\n//             state = action.payload\n//             return state;\n//         })\n//     }\n// })\n// export default signInSlice.reducer","map":{"version":3,"names":["createAsyncThunk","apiInstance","endPoints","initialState","email","password","privacyPolicy","getSignInFormAction","data","response","post","API_USER_SIGN_IN_FORM","then","res"],"sources":["/home/spx138/Desktop/sparxIT/Aladdin/TS Aladin/aladin-ts-toolkit/src/store/slices/signInSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { apiInstance } from \"../../API/axios\";\nimport endPoints from \"../../API/endPoints\";\nimport { SignInTypes } from \"../../types/SignInTypes\";\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst initialState: SignInTypes = {\n    email: \"\",\n    password: \"\",\n    privacyPolicy: false\n}\n\n// export const getSignInFormAction = createAsyncThunk(\n//     'signinFormActionType',\n//     async (data: SignInTypes) => {\n//         console.log(\"fsdfsdf\")\n//         const signInFormResponse = await apiInstance.post(endPoints.API_USER_SIGN_IN_FORM, data)\n//             .then((res) => {\n\n//                 if (res.data.data.token) {\n//                     localStorage.setItem(\"loginData\", res.data.data.token);\n//                 }\n//                 return res.data.data\n\n//             })\n//         console.log(\"signInFromResponse==>\", signInFormResponse)\n//         return signInFormResponse;\n//     }\n\n// )\nexport const getSignInFormAction = createAsyncThunk('signin', async (data: SignInTypes) => {\n    const response = await apiInstance.post(endPoints.API_USER_SIGN_IN_FORM, data).then((res) => {\n        return res.data\n    })\n})\n\n// export const signInSlice = createSlice({\n//     name: 'signInInfo',\n//     initialState,\n//     reducers: {},\n\n//     extraReducers: (builder) => {\n//         builder.addCase(getSignInFormAction.fulfilled, (state, action) => {\n//             console.log(\"signIn==>\", action.payload)\n//             state = action.payload\n//             return state;\n//         })\n//     }\n// })\n\n// export default signInSlice.reducer"],"mappings":"AAAA,SAASA,gBAAT,QAA8C,kBAA9C;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AAGA,OAAO,uCAAP;AAEA,MAAMC,YAAyB,GAAG;EAC9BC,KAAK,EAAE,EADuB;EAE9BC,QAAQ,EAAE,EAFoB;EAG9BC,aAAa,EAAE;AAHe,CAAlC,C,CAMA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;AACA,OAAO,MAAMC,mBAAmB,GAAGP,gBAAgB,CAAC,QAAD,EAAW,MAAOQ,IAAP,IAA6B;EACvF,MAAMC,QAAQ,GAAG,MAAMR,WAAW,CAACS,IAAZ,CAAiBR,SAAS,CAACS,qBAA3B,EAAkDH,IAAlD,EAAwDI,IAAxD,CAA8DC,GAAD,IAAS;IACzF,OAAOA,GAAG,CAACL,IAAX;EACH,CAFsB,CAAvB;AAGH,CAJkD,CAA5C,C,CAMP;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}