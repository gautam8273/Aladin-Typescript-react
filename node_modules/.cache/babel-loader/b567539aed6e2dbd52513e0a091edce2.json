{"ast":null,"code":"var _jsxFileName = \"/home/spx138/Desktop/sparxIT/Aladdin/TS Aladin/aladin-ts-toolkit/src/Components/serviceDetailsPage/RecommendedService.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Slider from 'react-slick';\nimport { recommendedServiceAction } from '../../store/slices/recommendedServiceSlice';\nimport { useAppDispatch, useAppSelector } from '../../store/storeHooks';\nimport OtherServicesCard from '../Cards/FilterCard/OtherServicesCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RecommendedService = () => {\n  _s();\n\n  const {\n    serviceId\n  } = useParams();\n  const dispatch = useAppDispatch();\n  const serviceDetailsPage = useAppSelector(a => a.serviceDetailsPageDetails); // console.log(\"serviceDetailspage--->\", serviceDetailsPage)\n\n  const recommededServiceData = useAppSelector(a => a.recommendedServiceDetails); // console.log(\"recommededServiceData-->\", recommededServiceData)\n\n  const categoryId = serviceDetailsPage.categoryId;\n  const subCategoryId = serviceDetailsPage.subcategoryId; // console.log(\"categoryId-->\", categoryId)\n  // console.log(\"subCategoryId--->\", subCategoryId)\n\n  useEffect(() => {\n    if (serviceId && categoryId && subCategoryId) {\n      dispatch(recommendedServiceAction({\n        serviceId,\n        categoryId,\n        subCategoryId\n      }));\n    }\n  }, [serviceId, subCategoryId]);\n  useEffect(() => {}, [recommededServiceData]); // for slider\n\n  const settings = {\n    // dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 3,\n    slidesToScroll: 1\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"simple-sliders\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider-heading\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Recommended Services\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"service_block\",\n        children: /*#__PURE__*/_jsxDEV(Slider, { ...settings,\n          children: recommededServiceData ? recommededServiceData.map((data, index) => {\n            return /*#__PURE__*/_jsxDEV(OtherServicesCard, {\n              cardDetails: data\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 37\n            }, this);\n          }) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(RecommendedService, \"CSnd1FLr/0xusC4UEBTTHKx6v38=\", false, function () {\n  return [useParams, useAppDispatch, useAppSelector, useAppSelector];\n});\n\n_c = RecommendedService;\nexport default RecommendedService;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecommendedService\");","map":{"version":3,"names":["React","useEffect","useParams","Slider","recommendedServiceAction","useAppDispatch","useAppSelector","OtherServicesCard","RecommendedService","serviceId","dispatch","serviceDetailsPage","a","serviceDetailsPageDetails","recommededServiceData","recommendedServiceDetails","categoryId","subCategoryId","subcategoryId","settings","infinite","speed","slidesToShow","slidesToScroll","map","data","index"],"sources":["/home/spx138/Desktop/sparxIT/Aladdin/TS Aladin/aladin-ts-toolkit/src/Components/serviceDetailsPage/RecommendedService.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react'\nimport { useParams } from 'react-router-dom';\nimport Slider from 'react-slick'\nimport { recommendedServiceAction } from '../../store/slices/recommendedServiceSlice';\nimport { useAppDispatch, useAppSelector } from '../../store/storeHooks';\nimport OtherServicesCard from '../Cards/FilterCard/OtherServicesCard';\n\nconst RecommendedService = () => {\n\n    const { serviceId } = useParams();\n\n    const dispatch = useAppDispatch();\n\n    const serviceDetailsPage = useAppSelector((a) => a.serviceDetailsPageDetails)\n    // console.log(\"serviceDetailspage--->\", serviceDetailsPage)\n\n    const recommededServiceData = useAppSelector((a) => a.recommendedServiceDetails)\n    // console.log(\"recommededServiceData-->\", recommededServiceData)\n\n    const categoryId: string = serviceDetailsPage.categoryId;\n    const subCategoryId: string = serviceDetailsPage.subcategoryId\n    // console.log(\"categoryId-->\", categoryId)\n    // console.log(\"subCategoryId--->\", subCategoryId)\n\n    useEffect(() => {\n        if (serviceId && categoryId && subCategoryId) {\n            dispatch(recommendedServiceAction({ serviceId, categoryId, subCategoryId }))\n        }\n    }, [serviceId, subCategoryId])\n    useEffect(() => {\n\n    }, [recommededServiceData])\n\n\n\n\n\n    // for slider\n    const settings = {\n        // dots: true,\n        infinite: true,\n        speed: 500,\n        slidesToShow: 3,\n        slidesToScroll: 1\n    };\n\n    return (\n        <>\n            <div className=\"simple-sliders\">\n                <div className=\"slider-heading\">\n                    <h2>Recommended Services</h2>\n                </div>\n                <div className='service_block'>\n                    <Slider {...settings}>\n                        {\n\n                            recommededServiceData ? recommededServiceData.map((data, index) => {\n                                return (\n                                    <OtherServicesCard cardDetails={data} key={index} />\n                                )\n                            }) : null\n                        }\n\n                    </Slider>\n\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default RecommendedService"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAoD,OAApD;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,wBAAT,QAAyC,4CAAzC;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,wBAA/C;AACA,OAAOC,iBAAP,MAA8B,uCAA9B;;;;AAEA,MAAMC,kBAAkB,GAAG,MAAM;EAAA;;EAE7B,MAAM;IAAEC;EAAF,IAAgBP,SAAS,EAA/B;EAEA,MAAMQ,QAAQ,GAAGL,cAAc,EAA/B;EAEA,MAAMM,kBAAkB,GAAGL,cAAc,CAAEM,CAAD,IAAOA,CAAC,CAACC,yBAAV,CAAzC,CAN6B,CAO7B;;EAEA,MAAMC,qBAAqB,GAAGR,cAAc,CAAEM,CAAD,IAAOA,CAAC,CAACG,yBAAV,CAA5C,CAT6B,CAU7B;;EAEA,MAAMC,UAAkB,GAAGL,kBAAkB,CAACK,UAA9C;EACA,MAAMC,aAAqB,GAAGN,kBAAkB,CAACO,aAAjD,CAb6B,CAc7B;EACA;;EAEAjB,SAAS,CAAC,MAAM;IACZ,IAAIQ,SAAS,IAAIO,UAAb,IAA2BC,aAA/B,EAA8C;MAC1CP,QAAQ,CAACN,wBAAwB,CAAC;QAAEK,SAAF;QAAaO,UAAb;QAAyBC;MAAzB,CAAD,CAAzB,CAAR;IACH;EACJ,CAJQ,EAIN,CAACR,SAAD,EAAYQ,aAAZ,CAJM,CAAT;EAKAhB,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEN,CAACa,qBAAD,CAFM,CAAT,CAtB6B,CA8B7B;;EACA,MAAMK,QAAQ,GAAG;IACb;IACAC,QAAQ,EAAE,IAFG;IAGbC,KAAK,EAAE,GAHM;IAIbC,YAAY,EAAE,CAJD;IAKbC,cAAc,EAAE;EALH,CAAjB;EAQA,oBACI;IAAA,uBACI;MAAK,SAAS,EAAC,gBAAf;MAAA,wBACI;QAAK,SAAS,EAAC,gBAAf;QAAA,uBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ,eAII;QAAK,SAAS,EAAC,eAAf;QAAA,uBACI,QAAC,MAAD,OAAYJ,QAAZ;UAAA,UAGQL,qBAAqB,GAAGA,qBAAqB,CAACU,GAAtB,CAA0B,CAACC,IAAD,EAAOC,KAAP,KAAiB;YAC/D,oBACI,QAAC,iBAAD;cAAmB,WAAW,EAAED;YAAhC,GAA2CC,KAA3C;cAAA;cAAA;cAAA;YAAA,QADJ;UAGH,CAJuB,CAAH,GAIhB;QAPb;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QAJJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ,iBADJ;AAuBH,CA9DD;;GAAMlB,kB;UAEoBN,S,EAELG,c,EAEUC,c,EAGGA,c;;;KAT5BE,kB;AAgEN,eAAeA,kBAAf"},"metadata":{},"sourceType":"module"}