{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport endPoints from \"../../API/endPoints\";\nimport { apiInstance } from \"../../API/axios\";\nconst initialState = [{\n  addressLine1: \"\",\n  addressLine2: \"\",\n  businessName: \"\",\n  cityId: \"\",\n  comment: \"\",\n  companyRegistrationNumber: '',\n  countryId: \"\",\n  email: \"\",\n  firstName: \"\",\n  lastName: \"\",\n  password: \"\",\n  re_password: \"\",\n  phone: \"\",\n  postcode: \"\",\n  primaryContactPerson: \"\",\n  stateId: \"\",\n  type: \"\",\n  vat: \"\",\n  dob: \"\",\n  proofOfIdentity: \"\",\n  privacyPolicy: false\n}];\nexport const sellerSignUpFormAction = createAsyncThunk(\"companySellerFormActionType\", async data => {\n  const freelancerSellerFormResponse = await apiInstance.post(endPoints.SELLER_SIGN_UP_FORM_API, data).then(res => {\n    return res.data.data;\n  }); // console.log(\"freelancerSellerFormResponse---->\", freelancerSellerFormResponse)\n\n  return freelancerSellerFormResponse;\n});","map":{"version":3,"names":["createAsyncThunk","endPoints","apiInstance","initialState","addressLine1","addressLine2","businessName","cityId","comment","companyRegistrationNumber","countryId","email","firstName","lastName","password","re_password","phone","postcode","primaryContactPerson","stateId","type","vat","dob","proofOfIdentity","privacyPolicy","sellerSignUpFormAction","data","freelancerSellerFormResponse","post","SELLER_SIGN_UP_FORM_API","then","res"],"sources":["/home/spx138/Desktop/sparxIT/Aladdin/TS Aladin/aladin-ts-toolkit/src/store/slices/freelancerSellerFormSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport endPoints from \"../../API/endPoints\";\nimport { apiInstance } from \"../../API/axios\";\nimport { FreelancerSellerFormType } from \"../../types/FreelancerSellerFormType\";\n\nconst initialState: FreelancerSellerFormType[] = [{\n    addressLine1: \"\",\n    addressLine2: \"\",\n    businessName: \"\",\n    cityId: \"\",\n    comment: \"\",\n    companyRegistrationNumber: '',\n    countryId: \"\",\n    email: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    password: \"\",\n    re_password: \"\",\n    phone: \"\",\n    postcode: \"\",\n    primaryContactPerson: \"\",\n    stateId: \"\",\n    type: \"\",\n    vat: \"\",\n    dob: \"\",\n    proofOfIdentity: \"\",\n    privacyPolicy: false\n}]\n\nexport const sellerSignUpFormAction = createAsyncThunk(\n    \"companySellerFormActionType\",\n    async (data: any) => {\n        const freelancerSellerFormResponse = await apiInstance.post(endPoints.SELLER_SIGN_UP_FORM_API, data)\n            .then((res) => {\n                return res.data.data;\n            })\n        // console.log(\"freelancerSellerFormResponse---->\", freelancerSellerFormResponse)\n        return freelancerSellerFormResponse;\n    }\n)"],"mappings":"AAAA,SAASA,gBAAT,QAA8C,kBAA9C;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,SAASC,WAAT,QAA4B,iBAA5B;AAGA,MAAMC,YAAwC,GAAG,CAAC;EAC9CC,YAAY,EAAE,EADgC;EAE9CC,YAAY,EAAE,EAFgC;EAG9CC,YAAY,EAAE,EAHgC;EAI9CC,MAAM,EAAE,EAJsC;EAK9CC,OAAO,EAAE,EALqC;EAM9CC,yBAAyB,EAAE,EANmB;EAO9CC,SAAS,EAAE,EAPmC;EAQ9CC,KAAK,EAAE,EARuC;EAS9CC,SAAS,EAAE,EATmC;EAU9CC,QAAQ,EAAE,EAVoC;EAW9CC,QAAQ,EAAE,EAXoC;EAY9CC,WAAW,EAAE,EAZiC;EAa9CC,KAAK,EAAE,EAbuC;EAc9CC,QAAQ,EAAE,EAdoC;EAe9CC,oBAAoB,EAAE,EAfwB;EAgB9CC,OAAO,EAAE,EAhBqC;EAiB9CC,IAAI,EAAE,EAjBwC;EAkB9CC,GAAG,EAAE,EAlByC;EAmB9CC,GAAG,EAAE,EAnByC;EAoB9CC,eAAe,EAAE,EApB6B;EAqB9CC,aAAa,EAAE;AArB+B,CAAD,CAAjD;AAwBA,OAAO,MAAMC,sBAAsB,GAAGzB,gBAAgB,CAClD,6BADkD,EAElD,MAAO0B,IAAP,IAAqB;EACjB,MAAMC,4BAA4B,GAAG,MAAMzB,WAAW,CAAC0B,IAAZ,CAAiB3B,SAAS,CAAC4B,uBAA3B,EAAoDH,IAApD,EACtCI,IADsC,CAChCC,GAAD,IAAS;IACX,OAAOA,GAAG,CAACL,IAAJ,CAASA,IAAhB;EACH,CAHsC,CAA3C,CADiB,CAKjB;;EACA,OAAOC,4BAAP;AACH,CATiD,CAA/C"},"metadata":{},"sourceType":"module"}