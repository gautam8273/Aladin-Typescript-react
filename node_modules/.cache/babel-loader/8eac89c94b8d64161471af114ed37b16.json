{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { apiInstance } from \"../../API/axios\";\nimport endPoints from \"../../API/endPoints\";\nconst initialState = [{\n  addressId: \"\",\n  averageRating: 0,\n  categoryId: \"\",\n  categoryName: \"\",\n  currency: \"\",\n  description: \"\",\n  fixedPrice: true,\n  forTime: \"\",\n  path: \"\",\n  price: 0,\n  remoteService: true,\n  sellerId: \"\",\n  serviceCover: \"\",\n  serviceCreatedDate: \"\",\n  serviceId: \"\",\n  subcategoryId: \"\",\n  subcategoryName: \"\",\n  title: \"\",\n  totalReview: 0,\n  wishlist: false,\n  _id: \"\",\n  sellerData: [],\n  gallery: [],\n  addressData: []\n}];\nexport const getServicefilterPageAction = createAsyncThunk(\"getServiceActionType\", async reqPayload => {\n  let countryAbc = JSON.parse(localStorage.getItem(\"countryData\") || \"\");\n  const getServiceResponse = await apiInstance.post(endPoints.GET_SERVICE_API + '?categoryId=' + `${reqPayload.categoryId}` + '&subcategoryId=' + `${reqPayload.subCategoryId}` // + '&string=undefined',\n  , {\n    country: countryAbc,\n    limit: 10,\n    pageno: 1\n  }).then(res => {\n    return res.data.data;\n  }); // console.log(\"getSeviceResponse-->\", getServiceResponse)\n\n  return getServiceResponse;\n});\nexport const getServiceFilterPageSlice = createSlice({\n  name: \"getServiceInfo\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getServicefilterPageAction.fulfilled, (state, action) => {\n      // console.log(\"action.payload---->\", action.payload)\n      state = action.payload;\n      return state;\n    });\n  }\n});\nexport default getServiceFilterPageSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","apiInstance","endPoints","initialState","addressId","averageRating","categoryId","categoryName","currency","description","fixedPrice","forTime","path","price","remoteService","sellerId","serviceCover","serviceCreatedDate","serviceId","subcategoryId","subcategoryName","title","totalReview","wishlist","_id","sellerData","gallery","addressData","getServicefilterPageAction","reqPayload","countryAbc","JSON","parse","localStorage","getItem","getServiceResponse","post","GET_SERVICE_API","subCategoryId","country","limit","pageno","then","res","data","getServiceFilterPageSlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","reducer"],"sources":["/home/spx138/Desktop/sparxIT/Aladdin/TS Aladin/aladin-ts-toolkit/src/store/slices/getServiceSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { apiInstance } from \"../../API/axios\";\nimport endPoints from \"../../API/endPoints\";\nimport { GetServiceType, GetServiceTypeList } from \"../../types/GetServiceType\";\n\n\nconst initialState: GetServiceTypeList = [{\n    addressId: \"\",\n    averageRating: 0,\n    categoryId: \"\",\n    categoryName: \"\",\n    currency: \"\",\n    description: \"\",\n    fixedPrice: true,\n    forTime: \"\",\n    path: \"\",\n    price: 0,\n    remoteService: true,\n    sellerId: \"\",\n    serviceCover: \"\",\n    serviceCreatedDate: \"\",\n    serviceId: \"\",\n    subcategoryId: \"\",\n    subcategoryName: \"\",\n    title: \"\",\n    totalReview: 0,\n    wishlist: false,\n    _id: \"\",\n    sellerData: [],\n    gallery: [],\n    addressData: []\n}]\n\nexport const getServicefilterPageAction = createAsyncThunk(\n    \"getServiceActionType\",\n    async (reqPayload: { categoryId: string, subCategoryId: string }) => {\n\n        let countryAbc = JSON.parse(localStorage.getItem(\"countryData\") || \"\")\n\n        const getServiceResponse = await apiInstance.post(endPoints.GET_SERVICE_API\n            + '?categoryId=' + `${reqPayload.categoryId}`\n            + '&subcategoryId=' + `${reqPayload.subCategoryId}`\n            // + '&string=undefined',\n            ,\n            {\n                country: countryAbc,\n                limit: 10,\n                pageno: 1\n            }\n        ).then((res) => {\n            return res.data.data\n        })\n        // console.log(\"getSeviceResponse-->\", getServiceResponse)\n        return getServiceResponse;\n    }\n)\n\n\nexport const getServiceFilterPageSlice = createSlice({\n    name: \"getServiceInfo\",\n    initialState,\n    reducers: {},\n    extraReducers: (builder) => {\n        builder.addCase(getServicefilterPageAction.fulfilled, (state, action) => {\n            // console.log(\"action.payload---->\", action.payload)\n            state = action.payload\n            return state;\n        })\n    }\n})\n\nexport default getServiceFilterPageSlice.reducer;\n\n"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AAIA,MAAMC,YAAgC,GAAG,CAAC;EACtCC,SAAS,EAAE,EAD2B;EAEtCC,aAAa,EAAE,CAFuB;EAGtCC,UAAU,EAAE,EAH0B;EAItCC,YAAY,EAAE,EAJwB;EAKtCC,QAAQ,EAAE,EAL4B;EAMtCC,WAAW,EAAE,EANyB;EAOtCC,UAAU,EAAE,IAP0B;EAQtCC,OAAO,EAAE,EAR6B;EAStCC,IAAI,EAAE,EATgC;EAUtCC,KAAK,EAAE,CAV+B;EAWtCC,aAAa,EAAE,IAXuB;EAYtCC,QAAQ,EAAE,EAZ4B;EAatCC,YAAY,EAAE,EAbwB;EActCC,kBAAkB,EAAE,EAdkB;EAetCC,SAAS,EAAE,EAf2B;EAgBtCC,aAAa,EAAE,EAhBuB;EAiBtCC,eAAe,EAAE,EAjBqB;EAkBtCC,KAAK,EAAE,EAlB+B;EAmBtCC,WAAW,EAAE,CAnByB;EAoBtCC,QAAQ,EAAE,KApB4B;EAqBtCC,GAAG,EAAE,EArBiC;EAsBtCC,UAAU,EAAE,EAtB0B;EAuBtCC,OAAO,EAAE,EAvB6B;EAwBtCC,WAAW,EAAE;AAxByB,CAAD,CAAzC;AA2BA,OAAO,MAAMC,0BAA0B,GAAG7B,gBAAgB,CACtD,sBADsD,EAEtD,MAAO8B,UAAP,IAAqE;EAEjE,IAAIC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,KAAuC,EAAlD,CAAjB;EAEA,MAAMC,kBAAkB,GAAG,MAAMlC,WAAW,CAACmC,IAAZ,CAAiBlC,SAAS,CAACmC,eAAV,GAC5C,cAD4C,GAC1B,GAAER,UAAU,CAACvB,UAAW,EADE,GAE5C,iBAF4C,GAEvB,GAAEuB,UAAU,CAACS,aAAc,EAFrB,CAG7B;EAH6B,EAK7B;IACIC,OAAO,EAAET,UADb;IAEIU,KAAK,EAAE,EAFX;IAGIC,MAAM,EAAE;EAHZ,CAL6B,EAU/BC,IAV+B,CAUzBC,GAAD,IAAS;IACZ,OAAOA,GAAG,CAACC,IAAJ,CAASA,IAAhB;EACH,CAZgC,CAAjC,CAJiE,CAiBjE;;EACA,OAAOT,kBAAP;AACH,CArBqD,CAAnD;AAyBP,OAAO,MAAMU,yBAAyB,GAAG7C,WAAW,CAAC;EACjD8C,IAAI,EAAE,gBAD2C;EAEjD3C,YAFiD;EAGjD4C,QAAQ,EAAE,EAHuC;EAIjDC,aAAa,EAAGC,OAAD,IAAa;IACxBA,OAAO,CAACC,OAAR,CAAgBtB,0BAA0B,CAACuB,SAA3C,EAAsD,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACrE;MACAD,KAAK,GAAGC,MAAM,CAACC,OAAf;MACA,OAAOF,KAAP;IACH,CAJD;EAKH;AAVgD,CAAD,CAA7C;AAaP,eAAeP,yBAAyB,CAACU,OAAzC"},"metadata":{},"sourceType":"module"}