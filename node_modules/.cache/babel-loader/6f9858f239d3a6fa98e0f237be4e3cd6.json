{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { apiInstance } from \"../../API/axios\";\nimport endPoints from \"../../API/endPoints\";\nconst initialState = [[{\n  _id: \"\",\n  languages: [],\n  status: true,\n  deletedAt: 0,\n  shortName: \"\",\n  name: \"\",\n  native: \"\",\n  phone: \"\",\n  continent: \"\",\n  capital: \"\",\n  currency: \"\",\n  emoji: \"\",\n  emojiU: \"\",\n  createdAt: \"\",\n  updatedAt: \"\",\n  __v: 0\n}]];\nexport const countryNameAction = createAsyncThunk(\"countryNameActionType\", async () => {\n  const countryNameResponse = await apiInstance.get(endPoints.COUNTRY_NAME_API).then(res => {\n    return res.data.data;\n  });\n  return countryNameResponse;\n});\nexport const countryNameSlice = createSlice({\n  name: 'countryNameInfo',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(countryNameAction.fulfilled, (state, action) => {\n      state = action.payload;\n      return state;\n    });\n  }\n});\nexport default countryNameSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","apiInstance","endPoints","initialState","_id","languages","status","deletedAt","shortName","name","native","phone","continent","capital","currency","emoji","emojiU","createdAt","updatedAt","__v","countryNameAction","countryNameResponse","get","COUNTRY_NAME_API","then","res","data","countryNameSlice","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","reducer"],"sources":["/home/spx138/Desktop/sparxIT/Aladdin/TS Aladin/aladin-ts-toolkit/src/store/slices/countryNameSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { apiInstance } from \"../../API/axios\";\nimport endPoints from \"../../API/endPoints\";\nimport { countryNameType } from \"../../types/countryNameType\";\n\nconst initialState: countryNameType = [[{\n    _id: \"\",\n    languages: [],\n    status: true,\n    deletedAt: 0,\n    shortName: \"\",\n    name: \"\",\n    native: \"\",\n    phone: \"\",\n    continent: \"\",\n    capital: \"\",\n    currency: \"\",\n    emoji: \"\",\n    emojiU: \"\",\n    createdAt: \"\",\n    updatedAt: \"\",\n    __v: 0\n}]]\n\nexport const countryNameAction = createAsyncThunk(\n    \"countryNameActionType\",\n    async () => {\n        const countryNameResponse = await apiInstance.get(endPoints.COUNTRY_NAME_API)\n            .then((res) => {\n                return res.data.data\n            })\n        return countryNameResponse;\n    }\n)\n\nexport const countryNameSlice = createSlice({\n    name: 'countryNameInfo',\n    initialState,\n    reducers: {},\n\n    extraReducers: (builder) => {\n        builder.addCase(countryNameAction.fulfilled, (state, action) => {\n            state = action.payload\n            return state;\n        })\n    }\n})\n\nexport default countryNameSlice.reducer;"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AAGA,MAAMC,YAA6B,GAAG,CAAC,CAAC;EACpCC,GAAG,EAAE,EAD+B;EAEpCC,SAAS,EAAE,EAFyB;EAGpCC,MAAM,EAAE,IAH4B;EAIpCC,SAAS,EAAE,CAJyB;EAKpCC,SAAS,EAAE,EALyB;EAMpCC,IAAI,EAAE,EAN8B;EAOpCC,MAAM,EAAE,EAP4B;EAQpCC,KAAK,EAAE,EAR6B;EASpCC,SAAS,EAAE,EATyB;EAUpCC,OAAO,EAAE,EAV2B;EAWpCC,QAAQ,EAAE,EAX0B;EAYpCC,KAAK,EAAE,EAZ6B;EAapCC,MAAM,EAAE,EAb4B;EAcpCC,SAAS,EAAE,EAdyB;EAepCC,SAAS,EAAE,EAfyB;EAgBpCC,GAAG,EAAE;AAhB+B,CAAD,CAAD,CAAtC;AAmBA,OAAO,MAAMC,iBAAiB,GAAGrB,gBAAgB,CAC7C,uBAD6C,EAE7C,YAAY;EACR,MAAMsB,mBAAmB,GAAG,MAAMpB,WAAW,CAACqB,GAAZ,CAAgBpB,SAAS,CAACqB,gBAA1B,EAC7BC,IAD6B,CACvBC,GAAD,IAAS;IACX,OAAOA,GAAG,CAACC,IAAJ,CAASA,IAAhB;EACH,CAH6B,CAAlC;EAIA,OAAOL,mBAAP;AACH,CAR4C,CAA1C;AAWP,OAAO,MAAMM,gBAAgB,GAAG3B,WAAW,CAAC;EACxCS,IAAI,EAAE,iBADkC;EAExCN,YAFwC;EAGxCyB,QAAQ,EAAE,EAH8B;EAKxCC,aAAa,EAAGC,OAAD,IAAa;IACxBA,OAAO,CAACC,OAAR,CAAgBX,iBAAiB,CAACY,SAAlC,EAA6C,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC5DD,KAAK,GAAGC,MAAM,CAACC,OAAf;MACA,OAAOF,KAAP;IACH,CAHD;EAIH;AAVuC,CAAD,CAApC;AAaP,eAAeN,gBAAgB,CAACS,OAAhC"},"metadata":{},"sourceType":"module"}