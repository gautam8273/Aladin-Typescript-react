{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { apiInstance } from \"../../API/axios\";\nimport endPoints from \"../../API/endPoints\";\nconst initialState = {\n  email: \"\",\n  password: \"\",\n  privacyPolicy: \"\"\n};\nexport const getSignInFormAction = createAsyncThunk('signinFormActionType', async data => {\n  const signInFormResponse = await apiInstance.post(endPoints.API_USER_SIGN_IN_FORM, data).then(res => {\n    if (res.data.data.token) {\n      localStorage.setItem(\"loginData\", res.data.data.token);\n    }\n\n    return res.data.data;\n  }); // console.log(\"signInFromResponse==>\", signInFormResponse)\n\n  return signInFormResponse;\n});\nexport const signInSlice = createSlice({\n  name: 'signInInfo',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getSignInFormAction.fulfilled, (state, action) => {\n      console.log(\"signIn==>\", action.payload);\n      state = action.payload;\n      return state;\n    });\n  }\n});\nexport default signInSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","apiInstance","endPoints","initialState","email","password","privacyPolicy","getSignInFormAction","data","signInFormResponse","post","API_USER_SIGN_IN_FORM","then","res","token","localStorage","setItem","signInSlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","console","log","payload","reducer"],"sources":["/home/spx138/Desktop/sparxIT/Aladdin/TS Aladin/aladin-ts-toolkit/src/store/slices/signInSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { apiInstance } from \"../../API/axios\";\nimport endPoints from \"../../API/endPoints\";\nimport { SignInTypes } from \"../../types/SignInTypes\";\n\nconst initialState: SignInTypes = {\n    email: \"\",\n    password: \"\",\n    privacyPolicy: \"\"\n}\n\nexport const getSignInFormAction = createAsyncThunk(\n    'signinFormActionType',\n    async (data: SignInTypes) => {\n        const signInFormResponse = await apiInstance.post(endPoints.API_USER_SIGN_IN_FORM, data)\n            .then((res) => {\n                if (res.data.data.token) {\n                    localStorage.setItem(\"loginData\", res.data.data.token);\n                }\n                return res.data.data\n            })\n        // console.log(\"signInFromResponse==>\", signInFormResponse)\n        return signInFormResponse;\n    }\n\n)\n\nexport const signInSlice = createSlice({\n    name: 'signInInfo',\n    initialState,\n    reducers: {},\n\n    extraReducers: (builder) => {\n        builder.addCase(getSignInFormAction.fulfilled, (state, action) => {\n            console.log(\"signIn==>\", action.payload)\n            state = action.payload\n            return state;\n        })\n    }\n})\n\nexport default signInSlice.reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AAGA,MAAMC,YAAyB,GAAG;EAC9BC,KAAK,EAAE,EADuB;EAE9BC,QAAQ,EAAE,EAFoB;EAG9BC,aAAa,EAAE;AAHe,CAAlC;AAMA,OAAO,MAAMC,mBAAmB,GAAGR,gBAAgB,CAC/C,sBAD+C,EAE/C,MAAOS,IAAP,IAA6B;EACzB,MAAMC,kBAAkB,GAAG,MAAMR,WAAW,CAACS,IAAZ,CAAiBR,SAAS,CAACS,qBAA3B,EAAkDH,IAAlD,EAC5BI,IAD4B,CACtBC,GAAD,IAAS;IACX,IAAIA,GAAG,CAACL,IAAJ,CAASA,IAAT,CAAcM,KAAlB,EAAyB;MACrBC,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCH,GAAG,CAACL,IAAJ,CAASA,IAAT,CAAcM,KAAhD;IACH;;IACD,OAAOD,GAAG,CAACL,IAAJ,CAASA,IAAhB;EACH,CAN4B,CAAjC,CADyB,CAQzB;;EACA,OAAOC,kBAAP;AACH,CAZ8C,CAA5C;AAgBP,OAAO,MAAMQ,WAAW,GAAGjB,WAAW,CAAC;EACnCkB,IAAI,EAAE,YAD6B;EAEnCf,YAFmC;EAGnCgB,QAAQ,EAAE,EAHyB;EAKnCC,aAAa,EAAGC,OAAD,IAAa;IACxBA,OAAO,CAACC,OAAR,CAAgBf,mBAAmB,CAACgB,SAApC,EAA+C,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC9DC,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,MAAM,CAACG,OAAhC;MACAJ,KAAK,GAAGC,MAAM,CAACG,OAAf;MACA,OAAOJ,KAAP;IACH,CAJD;EAKH;AAXkC,CAAD,CAA/B;AAcP,eAAeP,WAAW,CAACY,OAA3B"},"metadata":{},"sourceType":"module"}