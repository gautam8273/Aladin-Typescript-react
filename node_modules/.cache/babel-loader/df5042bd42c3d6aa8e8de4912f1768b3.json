{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { apiInstance } from \"../../API/axios\";\nimport endPoints from \"../../API/endPoints\";\nconst initialState = {};\nexport const worldLocationAction = createAsyncThunk(\"worldCountryLocationActionType\", async val => {\n  const worldLocationResponse = await apiInstance.get(endPoints.WORLD_LOCATION_API + `?string=${val}`).then(res => {\n    return res.data.data;\n  });\n  return worldLocationResponse;\n});\nexport const worldLocationSlice = createSlice({\n  name: \"worldLocationInfo\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(worldLocationAction.fulfilled, (state, action) => {\n      state = action.payload;\n      return state;\n    });\n  }\n});\nexport default worldLocationSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","apiInstance","endPoints","initialState","worldLocationAction","val","worldLocationResponse","get","WORLD_LOCATION_API","then","res","data","worldLocationSlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","reducer"],"sources":["/home/spx138/Desktop/sparxIT/Aladdin/TS Aladin/aladin-ts-toolkit/src/store/slices/worldLocationSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { apiInstance } from \"../../API/axios\";\nimport endPoints from \"../../API/endPoints\";\nimport { WorldLocationType } from \"../../types/WorldLocationType\";\n\n\nconst initialState: WorldLocationType = {\n\n}\n\nexport const worldLocationAction = createAsyncThunk(\n    \"worldCountryLocationActionType\",\n    async (val: any) => {\n        const worldLocationResponse = await apiInstance.get(endPoints.WORLD_LOCATION_API + `?string=${val}`)\n            .then((res) => {\n                return res.data.data\n            })\n        return worldLocationResponse;\n    }\n)\n\nexport const worldLocationSlice = createSlice({\n    name: \"worldLocationInfo\",\n    initialState,\n    reducers: {},\n    extraReducers: (builder) => {\n        builder.addCase(worldLocationAction.fulfilled, (state, action) => {\n            state = action.payload\n            return state;\n        })\n    }\n})\n\nexport default worldLocationSlice.reducer;"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AAIA,MAAMC,YAA+B,GAAG,EAAxC;AAIA,OAAO,MAAMC,mBAAmB,GAAGL,gBAAgB,CAC/C,gCAD+C,EAE/C,MAAOM,GAAP,IAAoB;EAChB,MAAMC,qBAAqB,GAAG,MAAML,WAAW,CAACM,GAAZ,CAAgBL,SAAS,CAACM,kBAAV,GAAgC,WAAUH,GAAI,EAA9D,EAC/BI,IAD+B,CACzBC,GAAD,IAAS;IACX,OAAOA,GAAG,CAACC,IAAJ,CAASA,IAAhB;EACH,CAH+B,CAApC;EAIA,OAAOL,qBAAP;AACH,CAR8C,CAA5C;AAWP,OAAO,MAAMM,kBAAkB,GAAGZ,WAAW,CAAC;EAC1Ca,IAAI,EAAE,mBADoC;EAE1CV,YAF0C;EAG1CW,QAAQ,EAAE,EAHgC;EAI1CC,aAAa,EAAGC,OAAD,IAAa;IACxBA,OAAO,CAACC,OAAR,CAAgBb,mBAAmB,CAACc,SAApC,EAA+C,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC9DD,KAAK,GAAGC,MAAM,CAACC,OAAf;MACA,OAAOF,KAAP;IACH,CAHD;EAIH;AATyC,CAAD,CAAtC;AAYP,eAAeP,kBAAkB,CAACU,OAAlC"},"metadata":{},"sourceType":"module"}