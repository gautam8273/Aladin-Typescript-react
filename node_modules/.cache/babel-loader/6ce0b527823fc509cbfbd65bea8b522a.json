{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { apiInstance } from \"../../API/axios\";\nimport endPoints from \"../../API/endPoints\";\nconst initialState = [];\nexport const sellerSignUpFormAction = createAsyncThunk(\"companySellerFormActionType\", async data => {\n  const companySellerFormResponse = await apiInstance.post(endPoints.SELLER_SIGN_UP_FORM_API, data).then(res => {\n    return res.data.data;\n  }); // console.log(\"companySellerFormresponse---->\", companySellerFormResponse)\n\n  return companySellerFormResponse;\n});\nexport const companySellerFormDataSlice = createSlice({\n  name: 'companySellerFormInfo',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(sellerSignUpFormAction.fulfilled, (state, action) => {\n      state = action.payload;\n      return state;\n    });\n  }\n});\nexport default companySellerFormDataSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","apiInstance","endPoints","initialState","sellerSignUpFormAction","data","companySellerFormResponse","post","SELLER_SIGN_UP_FORM_API","then","res","companySellerFormDataSlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","reducer"],"sources":["/home/spx138/Desktop/sparxIT/Aladdin/TS Aladin/aladin-ts-toolkit/src/store/slices/CompanySellerFormSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { apiInstance } from \"../../API/axios\";\nimport endPoints from \"../../API/endPoints\";\nimport { CompanySellerFormType } from \"../../types/CompanySellerFormType\";\n\nconst initialState: CompanySellerFormType[] = []\n\nexport const sellerSignUpFormAction = createAsyncThunk(\n    \"companySellerFormActionType\",\n    async (data: any) => {\n        const companySellerFormResponse = await apiInstance.post(endPoints.SELLER_SIGN_UP_FORM_API, data)\n            .then((res) => {\n                return res.data.data;\n            })\n        // console.log(\"companySellerFormresponse---->\", companySellerFormResponse)\n        return companySellerFormResponse;\n    }\n)\n\n\nexport const companySellerFormDataSlice = createSlice({\n    name: 'companySellerFormInfo',\n    initialState,\n    reducers: {},\n    extraReducers: (builder) => {\n        builder.addCase(sellerSignUpFormAction.fulfilled, (state, action) => {\n            state = action.payload\n            return state;\n        })\n    }\n})\n\nexport default companySellerFormDataSlice.reducer;"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AAGA,MAAMC,YAAqC,GAAG,EAA9C;AAEA,OAAO,MAAMC,sBAAsB,GAAGL,gBAAgB,CAClD,6BADkD,EAElD,MAAOM,IAAP,IAAqB;EACjB,MAAMC,yBAAyB,GAAG,MAAML,WAAW,CAACM,IAAZ,CAAiBL,SAAS,CAACM,uBAA3B,EAAoDH,IAApD,EACnCI,IADmC,CAC7BC,GAAD,IAAS;IACX,OAAOA,GAAG,CAACL,IAAJ,CAASA,IAAhB;EACH,CAHmC,CAAxC,CADiB,CAKjB;;EACA,OAAOC,yBAAP;AACH,CATiD,CAA/C;AAaP,OAAO,MAAMK,0BAA0B,GAAGX,WAAW,CAAC;EAClDY,IAAI,EAAE,uBAD4C;EAElDT,YAFkD;EAGlDU,QAAQ,EAAE,EAHwC;EAIlDC,aAAa,EAAGC,OAAD,IAAa;IACxBA,OAAO,CAACC,OAAR,CAAgBZ,sBAAsB,CAACa,SAAvC,EAAkD,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACjED,KAAK,GAAGC,MAAM,CAACC,OAAf;MACA,OAAOF,KAAP;IACH,CAHD;EAIH;AATiD,CAAD,CAA9C;AAYP,eAAeP,0BAA0B,CAACU,OAA1C"},"metadata":{},"sourceType":"module"}