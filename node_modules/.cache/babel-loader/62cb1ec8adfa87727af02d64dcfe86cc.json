{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { apiInstance } from \"../../API/axios\";\nimport endPoints from \"../../API/endPoints\";\nconst initialState = [{\n  _id: \"\",\n  default: true,\n  siteLanguage: true,\n  status: true,\n  deletedAt: 0,\n  name: \"\",\n  code: \"\",\n  flag: \"\",\n  flagLarge: \"\",\n  createdAt: \"\",\n  updatedAt: \"\",\n  __v: 0\n}];\nexport const getLanguageAction = createAsyncThunk(\"getLanguageActionType\", async () => {\n  const languageDataResponse = await apiInstance.get(endPoints.LANGUAGE_DATA_API).then(res => {\n    return res.data.data;\n  });\n  return languageDataResponse;\n});\nexport const languageDataSlice = createSlice({\n  name: \"getLanguageInfo\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getLanguageAction.fulfilled, (state, action) => {\n      state = action.payload;\n      return state;\n    });\n  }\n});\nexport default languageDataSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","apiInstance","endPoints","initialState","_id","default","siteLanguage","status","deletedAt","name","code","flag","flagLarge","createdAt","updatedAt","__v","getLanguageAction","languageDataResponse","get","LANGUAGE_DATA_API","then","res","data","languageDataSlice","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","reducer"],"sources":["/home/spx138/Desktop/sparxIT/Aladdin/TS Aladin/aladin-ts-toolkit/src/store/slices/languageSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { apiInstance } from \"../../API/axios\";\nimport endPoints from \"../../API/endPoints\";\nimport { LanguageDataType } from \"../../types/languageDataType\";\n\n\nconst initialState: LanguageDataType = [{\n    _id: \"\",\n    default: true,\n    siteLanguage: true,\n    status: true,\n    deletedAt: 0,\n    name: \"\",\n    code: \"\",\n    flag: \"\",\n    flagLarge: \"\",\n    createdAt: \"\",\n    updatedAt: \"\",\n    __v: 0\n}]\n\nexport const getLanguageAction = createAsyncThunk(\n    \"getLanguageActionType\",\n    async () => {\n        const languageDataResponse = await apiInstance.get(endPoints.LANGUAGE_DATA_API)\n            .then((res) => {\n                return res.data.data;\n            })\n        return languageDataResponse;\n    }\n)\n\n\nexport const languageDataSlice = createSlice({\n    name: \"getLanguageInfo\",\n    initialState,\n    reducers: {},\n    extraReducers: (builder) => {\n        builder.addCase(getLanguageAction.fulfilled, (state, action) => {\n            state = action.payload\n            return state;\n        })\n    }\n})\n\n\nexport default languageDataSlice.reducer;"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AAIA,MAAMC,YAA8B,GAAG,CAAC;EACpCC,GAAG,EAAE,EAD+B;EAEpCC,OAAO,EAAE,IAF2B;EAGpCC,YAAY,EAAE,IAHsB;EAIpCC,MAAM,EAAE,IAJ4B;EAKpCC,SAAS,EAAE,CALyB;EAMpCC,IAAI,EAAE,EAN8B;EAOpCC,IAAI,EAAE,EAP8B;EAQpCC,IAAI,EAAE,EAR8B;EASpCC,SAAS,EAAE,EATyB;EAUpCC,SAAS,EAAE,EAVyB;EAWpCC,SAAS,EAAE,EAXyB;EAYpCC,GAAG,EAAE;AAZ+B,CAAD,CAAvC;AAeA,OAAO,MAAMC,iBAAiB,GAAGjB,gBAAgB,CAC7C,uBAD6C,EAE7C,YAAY;EACR,MAAMkB,oBAAoB,GAAG,MAAMhB,WAAW,CAACiB,GAAZ,CAAgBhB,SAAS,CAACiB,iBAA1B,EAC9BC,IAD8B,CACxBC,GAAD,IAAS;IACX,OAAOA,GAAG,CAACC,IAAJ,CAASA,IAAhB;EACH,CAH8B,CAAnC;EAIA,OAAOL,oBAAP;AACH,CAR4C,CAA1C;AAYP,OAAO,MAAMM,iBAAiB,GAAGvB,WAAW,CAAC;EACzCS,IAAI,EAAE,iBADmC;EAEzCN,YAFyC;EAGzCqB,QAAQ,EAAE,EAH+B;EAIzCC,aAAa,EAAGC,OAAD,IAAa;IACxBA,OAAO,CAACC,OAAR,CAAgBX,iBAAiB,CAACY,SAAlC,EAA6C,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC5DD,KAAK,GAAGC,MAAM,CAACC,OAAf;MACA,OAAOF,KAAP;IACH,CAHD;EAIH;AATwC,CAAD,CAArC;AAaP,eAAeN,iBAAiB,CAACS,OAAjC"},"metadata":{},"sourceType":"module"}